/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Lab.LabAssistant;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Lab.LabAssistant;
import Business.Organization.LabAssistantOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Lab4DocWQ;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JAGTAP
 */
public class LabAssistantWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    JPanel userProcessContainer;
    UserAccount account; 
    LabAssistantOrganization organization; 
    Enterprise enterprise; 
    EcoSystem business;
    LabAssistant him;
    public LabAssistantWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, LabAssistantOrganization labAssistantOrganization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account=account;
        him=(LabAssistant)this.account.getEmployee().getP();
        this.business=business;
        this.organization= labAssistantOrganization;
        if (him.getWorkQueue() == null) {
            WorkQueue w = new WorkQueue();
            him.setWorkQueue(w);
        }
        populateTable();
    }

     public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) requestTable.getModel();
        model.setRowCount(0);
 //       if(organization.getWorkQueue().getWorkRequestList().size()!=0)
            for (WorkRequest work : organization.getWorkQueue().getWorkRequestList()) {
                if (work instanceof Lab4DocWQ) {
                    if((work.getStatus()=="Requested") ||
                        (work.getStatus()=="Pending" && work.getReceiver().getUsername().equals(account.getUsername())))
                    {
                        Object[] row = new Object[4];
                        row[0] = work.getMessage();
                        row[1] = work.getSender();
                        row[2] = work.getReceiver();
                        row[3] = work;
                        model.addRow(row);
                    }
                }
            }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        btnComplete = new javax.swing.JButton();
        resultTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Test", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestTable);

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        btnComplete.setText("Submit Result");
        btnComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteActionPerformed(evt);
            }
        });

        jLabel1.setText("Result");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(resultTextField)
                        .addGap(18, 18, 18)
                        .addComponent(btnComplete, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(assignJButton)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(assignJButton)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnComplete)
                    .addComponent(resultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(191, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = requestTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } 
        else
        {

            Lab4DocWQ p = (Lab4DocWQ) requestTable.getValueAt(selectedRow, 3);

            p.setStatus("Pending");
            p.setReceiver(account);
            //requestTable.setEnabled(false);
            populateTable();

        }
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void btnCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } 
        else 
        {
            Lab4DocWQ p = (Lab4DocWQ) requestTable.getValueAt(selectedRow, 3);
            if(p.getStatus()=="Pending")
            {
                if(resultTextField.getText().isEmpty())
                    JOptionPane.showMessageDialog(null, "Please Enter the result", "Error", 0);
                else
                {
                    p.setStatus("Complete");
                    p.getMedicalTest().setResult(resultTextField.getText());
                    populateTable();
                }
            }
            else
                JOptionPane.showMessageDialog(null, "Selected requesed should be assigned First", "Error", 0);
            requestTable.setEnabled(true);
            resultTextField.setText("");
        }
    }//GEN-LAST:event_btnCompleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton btnComplete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestTable;
    private javax.swing.JTextField resultTextField;
    // End of variables declaration//GEN-END:variables
}
